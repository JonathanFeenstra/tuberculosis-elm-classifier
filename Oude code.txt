import cv2
import imutils
import numpy as np

img = cv2.imread('Data\\MontgomerySet\\CXR_png\\MCUCXR_0001_0.png')
 
def is_contour_bad(c):
    # approximate the contour
    peri = cv2.arcLength(c, True)
    approx = cv2.approxPolyDP(c, 0.02 * peri, True)
 
    # the contour is 'bad' if it is not a rectangle
    return not len(approx) == 4

# load the shapes image, convert it to grayscale, and edge edges in
# the image
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
edged = cv2.Canny(gray, 0, 100)
cv2.imshow("Original", img)
 
# find contours in the image and initialize the mask that will be
# used to remove the bad contours
cnts = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
cnts = imutils.grab_contours(cnts)
mask = np.ones(img.shape[:2], dtype="uint8") * 255
 
# loop over the contours
for c in cnts:
    # if the contour is bad, draw it on the mask
    if is_contour_bad(c):
        cv2.drawContours(mask, [c], -1, 0, -1)
 
# remove the contours from the image and show the resulting images
image = cv2.bitwise_and(img, img, mask=mask)
cv2.imshow("Mask", mask)
cv2.imshow("After", img)
cv2.waitKey(0)

*****************************************************************************************************